{"ast":null,"code":"var _jsxFileName = \"/Users/yoni/Desktop/Final Assignment - Front End/cost-manager-front/src/ReportView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction ReportView(props) {\n  _s();\n  const {\n    year,\n    month\n  } = props;\n  const [costs, setCosts] = useState([]);\n  useEffect(() => {\n    const costs = JSON.parse(localStorage.getItem('costs')) || [];\n    setCosts(costs);\n  }, []);\n\n  // create data for pie chart\n  const categories = ['Food', 'Health', 'Housing', 'Sport', 'Education', 'Transportation', 'Other'];\n  const categoryTotals = {};\n  categories.forEach(category => {\n    categoryTotals[category] = 0;\n  });\n  costs.forEach(cost => {\n    if (cost.year === year && cost.month === month) {\n      categoryTotals[cost.category] += cost.sum;\n    }\n  });\n  const pieData = categories.map(category => ({\n    title: category,\n    value: categoryTotals[category],\n    color: '#' + Math.random().toString(16).substr(-6)\n  }));\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    data: pieData,\n    lineWidth: 30,\n    label: _ref => {\n      let {\n        data,\n        dataIndex\n      } = _ref;\n      return `${data[dataIndex].title}: $${data[dataIndex].value}`;\n    },\n    labelPosition: 60,\n    labelStyle: {\n      fontSize: '15px',\n      fontFamily: 'sans-serif'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportView, \"+j/zIYVsd9ch5jgZZfhNjSDPGWM=\");\n_c = ReportView;\nexport default ReportView;\nvar _c;\n$RefreshReg$(_c, \"ReportView\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","register","ReportView","props","year","month","costs","setCosts","JSON","parse","localStorage","getItem","categories","categoryTotals","forEach","category","cost","sum","pieData","map","title","value","color","Math","random","toString","substr","data","dataIndex","fontSize","fontFamily"],"sources":["/Users/yoni/Desktop/Final Assignment - Front End/cost-manager-front/src/ReportView.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction ReportView(props) {\n  const { year, month } = props;\n  const [costs, setCosts] = useState([]);\n\n  useEffect(() => {\n    const costs = JSON.parse(localStorage.getItem('costs')) || [];\n    setCosts(costs);\n  }, []);\n\n  // create data for pie chart\n  const categories = ['Food', 'Health', 'Housing', 'Sport', 'Education', 'Transportation', 'Other'];\n  const categoryTotals = {};\n  categories.forEach((category) => {\n    categoryTotals[category] = 0;\n  });\n\n  costs.forEach((cost) => {\n    if (cost.year === year && cost.month === month) {\n      categoryTotals[cost.category] += cost.sum;\n    }\n  });\n\n  const pieData = categories.map((category) => ({\n    title: category,\n    value: categoryTotals[category],\n    color: '#' + Math.random().toString(16).substr(-6)\n  }));\n\n  return (\n    <PieChart\n      data={pieData}\n      lineWidth={30}\n      label={({ data, dataIndex }) => `${data[dataIndex].title}: $${data[dataIndex].value}`}\n      labelPosition={60}\n      labelStyle={{\n        fontSize: '15px',\n        fontFamily: 'sans-serif'\n      }}\n    />\n  );\n}\n\nexport default ReportView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,GAAG,QAAQ,iBAAiB;AAAC;AAEtCJ,OAAO,CAACK,QAAQ,CAACJ,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,SAASG,UAAU,CAACC,KAAK,EAAE;EAAA;EACzB,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAC7B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IAC7DJ,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,UAAU,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,CAAC;EACjG,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzBD,UAAU,CAACE,OAAO,CAAEC,QAAQ,IAAK;IAC/BF,cAAc,CAACE,QAAQ,CAAC,GAAG,CAAC;EAC9B,CAAC,CAAC;EAEFT,KAAK,CAACQ,OAAO,CAAEE,IAAI,IAAK;IACtB,IAAIA,IAAI,CAACZ,IAAI,KAAKA,IAAI,IAAIY,IAAI,CAACX,KAAK,KAAKA,KAAK,EAAE;MAC9CQ,cAAc,CAACG,IAAI,CAACD,QAAQ,CAAC,IAAIC,IAAI,CAACC,GAAG;IAC3C;EACF,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGN,UAAU,CAACO,GAAG,CAAEJ,QAAQ,KAAM;IAC5CK,KAAK,EAAEL,QAAQ;IACfM,KAAK,EAAER,cAAc,CAACE,QAAQ,CAAC;IAC/BO,KAAK,EAAE,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;EACnD,CAAC,CAAC,CAAC;EAEH,oBACE,QAAC,QAAQ;IACP,IAAI,EAAER,OAAQ;IACd,SAAS,EAAE,EAAG;IACd,KAAK,EAAE;MAAA,IAAC;QAAES,IAAI;QAAEC;MAAU,CAAC;MAAA,OAAM,GAAED,IAAI,CAACC,SAAS,CAAC,CAACR,KAAM,MAAKO,IAAI,CAACC,SAAS,CAAC,CAACP,KAAM,EAAC;IAAA,CAAC;IACtF,aAAa,EAAE,EAAG;IAClB,UAAU,EAAE;MACVQ,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE;IACd;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN;AAAC,GAxCQ5B,UAAU;AAAA,KAAVA,UAAU;AA0CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}