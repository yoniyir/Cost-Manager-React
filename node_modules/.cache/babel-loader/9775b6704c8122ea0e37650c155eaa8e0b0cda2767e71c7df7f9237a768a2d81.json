{"ast":null,"code":"var _jsxFileName = \"/Users/yoni/Desktop/Projects - Coding/Final Assignment - Front End/cost-manager-front/Cost-Manager-React/src/CostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Cost.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport LocalStorage from './LocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CostForm() {\n  _s();\n  const [date, setDate] = useState(null);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [sum, setSum] = useState('');\n  const [text_msg, setText_msg] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    // if no date selected, set to today\n    let today = new Date();\n    if (date === null) {\n      setDate(today);\n    }\n    const formData = {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n      description: description,\n      category: category,\n      sum: parseFloat(sum)\n    };\n\n    // check if all fields are filled\n    if (description === '' || category === '' || sum === '' || date === null) {\n      let str = `All fields are required `;\n      setText_msg(str);\n      // add class to text\n      document.querySelector('.text').classList.add('error');\n      document.querySelector('.text').classList.remove('success');\n      return;\n    }\n\n    // append to localstorage array of objects (costs)\n    const costs = JSON.parse(localStorage.getItem('costs')) || [];\n    costs.push(formData);\n    LocalStorage.setItem('costs', JSON.stringify(costs)).then(() => {\n      console.log('Cost added successfully');\n    }).catch(err => {\n      console.log(err);\n    });\n    setText_msg('Cost added successfully');\n    // add class to text\n    document.querySelector('.text').classList.add('success');\n    document.querySelector('.text').classList.remove('error');\n    // clear form\n    setDate(null);\n    setDescription('');\n    setCategory('');\n    setSum('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper animate__animated animate__fadeIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-cost-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: date,\n        onChange: setDate,\n        id: \"date\",\n        dateFormat: \"dd/MM/yyyy\",\n        placeholderText: \"dd/mm/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        value: description,\n        onChange: event => setDescription(event.target.value),\n        placeholder: \"Description of the cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: category,\n        onChange: event => setCategory(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select category --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"food\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"health\",\n          children: \"Health\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"housing\",\n          children: \"Housing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sport\",\n          children: \"Sport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"education\",\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"transportation\",\n          children: \"Transportation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sum\",\n        children: \"Sum:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"sum\",\n        value: sum,\n        onChange: event => setSum(event.target.value),\n        placeholder: \"Sum of the cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-50\",\n        type: \"submit\",\n        children: \"Add Cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: text_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(CostForm, \"g/1yt3OBkEVSCu/jhcdtTzanjEs=\");\n_c = CostForm;\nexport default CostForm;\nvar _c;\n$RefreshReg$(_c, \"CostForm\");","map":{"version":3,"names":["React","useState","DatePicker","LocalStorage","CostForm","date","setDate","description","setDescription","category","setCategory","sum","setSum","text_msg","setText_msg","handleSubmit","event","preventDefault","today","Date","formData","year","getFullYear","month","getMonth","day","getDate","parseFloat","str","document","querySelector","classList","add","remove","costs","JSON","parse","localStorage","getItem","push","setItem","stringify","then","console","log","catch","err","target","value"],"sources":["/Users/yoni/Desktop/Projects - Coding/Final Assignment - Front End/cost-manager-front/Cost-Manager-React/src/CostForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Cost.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport LocalStorage from './LocalStorage';\n\n\nfunction CostForm() {\n    const [date, setDate] = useState(null);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [sum, setSum] = useState('');\n    const [text_msg, setText_msg] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // if no date selected, set to today\n        let today = new Date();\n\n        if (date === null) {\n            setDate(today);\n        }\n        const formData = {\n            year: date.getFullYear(),\n            month: date.getMonth() + 1,\n            day: date.getDate(),\n            description: description,\n            category: category,\n            sum: parseFloat(sum)\n        };\n\n        // check if all fields are filled\n        if (description === '' || category === '' || sum === '' || date === null) {\n            let str = `All fields are required `;\n            setText_msg(str);\n            // add class to text\n            document.querySelector('.text').classList.add('error');\n            document.querySelector('.text').classList.remove('success');\n            return;\n        }\n\n        // append to localstorage array of objects (costs)\n        const costs = JSON.parse(localStorage.getItem('costs')) || [];\n        costs.push(formData);\n        LocalStorage.setItem('costs', JSON.stringify(costs)).then(() => {\n            console.log('Cost added successfully');\n        }).catch((err) => {\n            console.log(err);\n        });\n\n        setText_msg('Cost added successfully');\n        // add class to text\n        document.querySelector('.text').classList.add('success');\n        document.querySelector('.text').classList.remove('error');\n        // clear form\n        setDate(null);\n        setDescription('');\n        setCategory('');\n        setSum('');\n    };\n\n    return (\n        <div className='wrapper animate__animated animate__fadeIn'>\n            <form className='add-cost-form' onSubmit={handleSubmit}>\n                <label htmlFor='date'>Date:</label>\n                <DatePicker\n                    selected={date}\n                    onChange={setDate}\n                    id='date'\n                    dateFormat='dd/MM/yyyy'\n                    placeholderText='dd/mm/yyyy'\n                />\n                <label htmlFor='description'>Description:</label>\n                <input\n                    type='text'\n                    id='description'\n                    value={description}\n                    onChange={(event) => setDescription(event.target.value)}\n                    placeholder='Description of the cost'\n                />\n                <label htmlFor='category'>Category:</label>\n                <select\n                    id='category'\n                    value={category}\n                    onChange={(event) => setCategory(event.target.value)}\n                >\n                    <option value=''>-- Select category --</option>\n                    <option value='food'>Food</option>\n                    <option value='health'>Health</option>\n                    <option value='housing'>Housing</option>\n                    <option value='sport'>Sport</option>\n                    <option value='education'>Education</option>\n                    <option value='transportation'>Transportation</option>\n                    <option value='other'>Other</option>\n                </select>\n                <label htmlFor='sum'>Sum:</label>\n                <input\n                    type='number'\n                    id='sum'\n                    value={sum}\n                    onChange={(event) => setSum(event.target.value)}\n                    placeholder='Sum of the cost'\n                />\n                <button className='button-50' type='submit'>\n                    Add Cost\n                </button>\n            </form>\n            <p className='text'>{text_msg}</p>\n        </div>\n    );\n}\n\nexport default CostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}